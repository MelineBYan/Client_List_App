{"version":3,"sources":["utils/helpers/validators.js","redux/types.js","utils/config.js","redux/actions.js","components/Spinner/Spinner.js","components/Provider/Provider.js","components/ClientModal/ClientModal.js","components/Client/Client.js","components/ConfirmModal/ConfirmModal.js","components/Search/Search.js","components/ClientList/ClientList.js","App.js","redux/reducers/clientReducer.js","redux/reducers/clientModalReducer.js","redux/reducers/searchReducer.js","redux/store.js","index.js"],"names":["length","SET_LOADING","SET_ERROR","SET_SUCCESS","GET_CLIENTS","ADD_CLIENT","REMOVE_CLIENT","EDIT_CLIENT","SET_ISOPENMODAL","SET_ISOPENCONFIRMMODAL","SET_EDITABLE_CLIENT","RESET_MODAL_DATA","SET_INITIALSTATE","CHANGE_MODAL_FORM","DELETE_PROVIDER","GET_PROVIDERS","ADD_PROVIDER","EDIT_PROVIDER","REMOVE_PROVIDER","TOGGLE_CHECKED","SET_EDITABLE_PROVIDER","CHANGE_PROVIDER","RESET_PROVIDER","CHANGE_SEARCH_VALUE","SET_DROPDOWN_VALUE","SET_DATEPICKER_DATE","RESET_SEARCH_DATA","TOGGLE_CLICK","API_HOST","setLoading","type","types","setError","message","payload","getClients","clients","deleteClient","id","addClient","client","setEditableClient","value","addProvider","provider","deleteProvider","deleteProv","resetModalData","toggleClick","resetSearchData","setClients","dispatch","a","fetch","res","json","data","error","msg","setProviders","providers","updateProvider","_id","method","body","JSON","stringify","headers","response","removeProvider","submitClientModalForm","state","onSubmit","editableProvider","err","console","sortOrFilrterTasks","click","query","Object","entries","reduce","q","elem","slice","Spinner","class","Provider","toggleChecked","setEditableProvider","changeProvider","currentlyEditing","useEffect","inputRef","current","focus","checked","forEach","p","useRef","Form","Group","as","Row","className","Col","sm","Button","variant","onClick","icon","faCheck","style","color","Control","name","ref","onChange","e","target","readOnly","disabled","faTimes","faEdit","faTrash","memo","ClientModal","props","inputs","label","onHide","editableClient","providersList","errorMessage","changeModalForm","setState","setIsOpenConfirmModal","createProvider","submitForm","email","phone","inputsJSX","map","input","idx","Label","column","autoComplete","providersJSX","Modal","show","Header","closeButton","Title","Body","preventDefault","border","Footer","trim","connect","clientModalReducer","clientReducer","setModalInitialState","toggleCheckedProvider","prov","Client","setEditable","el","join","Confirm","removeClient","sortVariants","searchReducer","changeSearchValue","val","setDropdownValue","setDatepicker","setDatepickerDate","search","sort","create_lte","create_gte","datePickers","sortItems","item","DropdownItem","datePickersJSX","selected","date","isClearable","showMonthDropdown","scrollableYearDropdown","placeholder","faSearch","DropdownButton","title","find","ClientList","createClient","updateClient","setIsOpenModal","loading","isOpenModal","isOpenConfirmModal","clientList","Container","Table","striped","bordered","hover","size","mapDispatchToProps","isOpen","successMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","initialState","clientReduser","action","filter","t","findIndex","c","isRequired","validateEmail","test","String","toLowerCase","isArmPhoneNumber","Phone_N","maxLength50","minLength1","minLength","providersIds","includes","push","middlewares","thunk","store","createStore","combineReducers","applyMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a0425fb.chunk.js","sourcesContent":["export const maxLength = (length) => (value) =>\r\n  value.length > length ? `Max length is ${length}` : undefined;\r\nexport const minLength = (length) => (value) =>\r\n  value.length < length ? `Min length is ${length}` : undefined;\r\nexport const isRequired = (value, name) =>\r\n  !value.length ? `${name} is required` : undefined;\r\nexport const validateEmail = (email) => {\r\n  const regexp =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  return regexp.test(String(email).toLowerCase()) ? undefined : \"Invalid email\";\r\n};\r\nexport const isArmPhoneNumber = (Phone_N) => {\r\n  const numberRegExp = /^[+-]?(([0-9])+([.][0-9]*)?|[.][0-9]+)$/;\r\n  return numberRegExp.test(Phone_N) ? undefined : \"Not a  number\";\r\n};\r\n","// Global\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_SUCCESS = \"SET_SUCCESS\";\r\n\r\n//Client\r\nexport const GET_CLIENTS = \"GET_CLIENTS\";\r\nexport const ADD_CLIENT = \"ADD_CLIENT\";\r\nexport const REMOVE_CLIENT = \"REMOVE_CLIENT\";\r\nexport const EDIT_CLIENT = \"EDIT_CLIENT\";\r\nexport const SET_ISOPENMODAL = \"SET_ISOPENMODAL\";\r\nexport const SET_ISOPENCONFIRMMODAL = \"SET_ISOPENCONFIRMMODAL\";\r\nexport const SET_EDITABLE_CLIENT = \"SET_EDITABLE_CLIENT\";\r\n\r\n//ClientModal\r\nexport const RESET_MODAL_DATA = \"RESET_MODAL_DATA\";\r\nexport const SET_INITIALSTATE = \"SET_INITIALSTATE\";\r\nexport const CHANGE_MODAL_FORM = \"CHANGE_MODAL_FORM\";\r\nexport const CREATE_PROVIDER = \"CREATE_PROVIDER\";\r\nexport const DELETE_PROVIDER = \"DELETE_PROVIDER\";\r\n\r\n//Provider\r\nexport const GET_PROVIDERS = \"GET_PROVIDERS\";\r\nexport const ADD_PROVIDER = \"ADD_PROVIDER\";\r\nexport const EDIT_PROVIDER = \"EDIT_PROVIDER\";\r\nexport const REMOVE_PROVIDER = \"REMOVE_PROVIDER\";\r\nexport const TOGGLE_CHECKED = \"TOGGLE_CHECKED\";\r\nexport const SET_EDITABLE_PROVIDER = \"SET_EDITABLE_PROVIDER\";\r\nexport const CHANGE_PROVIDER = \"CHANGE_PROVIDER\";\r\nexport const RESET_PROVIDER = \"RESET_PROVIDER\";\r\n\r\n//Search\r\nexport const CHANGE_SEARCH_VALUE = \"CHANGE_SEARCH_VALUE\";\r\nexport const SET_DROPDOWN_VALUE = \"SET_DROPDOWN_VALUE\";\r\nexport const SET_DATEPICKER_DATE = \"SET_DATEPICKER_DATE\";\r\nexport const RESET_SEARCH_DATA = \"RESET_SEARCH_DATA\";\r\nexport const TOGGLE_CLICK = \"TOGGLE_CLICK\";\r\n","export const API_HOST =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? process.env.REACT_APP_API_URL\r\n    : \"https://clientlist-app.herokuapp.com\";\r\n","import * as types from \"../redux/types\";\r\n\r\nimport { API_HOST } from \"../utils/config\";\r\n\r\n//actionCreators\r\nexport const setLoading = () => {\r\n  return {\r\n    type: types.SET_LOADING,\r\n  };\r\n};\r\nexport const setError = (message) => {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\nexport const setSuccess = (message) => {\r\n  return {\r\n    type: types.SET_SUCCESS,\r\n    payload: message,\r\n  };\r\n};\r\n\r\n// Client\r\nexport const getClients = (clients) => {\r\n  return {\r\n    type: types.GET_CLIENTS,\r\n    payload: clients,\r\n  };\r\n};\r\nexport const deleteClient = (id) => {\r\n  return {\r\n    type: types.REMOVE_CLIENT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const setIsOpenModal = (isOpen) => {\r\n  return {\r\n    type: types.SET_ISOPENMODAL,\r\n    payload: isOpen,\r\n  };\r\n};\r\n\r\nexport const addClient = (client) => {\r\n  return {\r\n    type: types.ADD_CLIENT,\r\n    payload: client,\r\n  };\r\n};\r\n\r\nexport const setEditableClient = (value) => {\r\n  return {\r\n    type: types.SET_EDITABLE_CLIENT,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setIsOpenConfirmModal = (isOpen) => {\r\n  return {\r\n    type: types.SET_ISOPENCONFIRMMODAL,\r\n    payload: isOpen,\r\n  };\r\n};\r\n\r\nexport const editClient = (value) => {\r\n  return {\r\n    type: types.EDIT_CLIENT,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n//Provider\r\nexport const getProviders = (providers) => {\r\n  return {\r\n    type: types.GET_PROVIDERS,\r\n    payload: providers,\r\n  };\r\n};\r\n\r\nexport const addProvider = (provider) => {\r\n  return {\r\n    type: types.ADD_PROVIDER,\r\n    payload: provider,\r\n  };\r\n};\r\nexport const changeProvider = (value) => {\r\n  return {\r\n    type: types.CHANGE_PROVIDER,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const editProvider = (prov) => {\r\n  return {\r\n    type: types.EDIT_PROVIDER,\r\n    payload: prov,\r\n  };\r\n};\r\nexport const deleteProvider = (id) => {\r\n  return {\r\n    type: types.REMOVE_PROVIDER,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const setEditableProvider = (prov) => {\r\n  return {\r\n    type: types.SET_EDITABLE_PROVIDER,\r\n    payload: prov,\r\n  };\r\n};\r\n\r\n// modal provider\r\n\r\nexport const deleteProv = (id) => {\r\n  return {\r\n    type: types.DELETE_PROVIDER,\r\n    payload: id,\r\n  };\r\n};\r\nexport const resetProvider = () => {\r\n  return {\r\n    type: types.RESET_PROVIDER,\r\n  };\r\n};\r\n\r\n//ClientModal\r\nexport const resetModalData = () => {\r\n  return {\r\n    type: types.RESET_MODAL_DATA,\r\n  };\r\n};\r\n\r\nexport const changeModalForm = (data) => {\r\n  return {\r\n    type: types.CHANGE_MODAL_FORM,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const setModalInitialState = (data) => {\r\n  return {\r\n    type: types.SET_INITIALSTATE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const toggleCheckedProvider = (provider) => {\r\n  return {\r\n    type: types.TOGGLE_CHECKED,\r\n    payload: provider,\r\n  };\r\n};\r\n\r\n//Search\r\nexport const changeSearchValue = (target) => {\r\n  return {\r\n    type: types.CHANGE_SEARCH_VALUE,\r\n    payload: target,\r\n  };\r\n};\r\nexport const toggleClick = (value) => {\r\n  return {\r\n    type: types.TOGGLE_CLICK,\r\n    payload: value,\r\n  };\r\n};\r\n\r\nexport const setDropdownValue = (...data) => {\r\n  return {\r\n    type: types.SET_DROPDOWN_VALUE,\r\n    payload: data,\r\n  };\r\n};\r\nexport const setDatepickerDate = (...data) => {\r\n  return {\r\n    type: types.SET_DATEPICKER_DATE,\r\n    payload: data,\r\n  };\r\n};\r\nexport const resetSearchData = () => {\r\n  return {\r\n    type: types.RESET_SEARCH_DATA,\r\n  };\r\n};\r\n\r\n//actionThunks\r\n// Client\r\nexport const setClients = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const res = await fetch(`${API_HOST}/client`);\r\n    const data = await res.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(getClients(data.clients));\r\n  } catch (err) {\r\n    dispatch(setError(err[0] ? err[0].msg : err.message));\r\n  }\r\n};\r\n\r\nexport const createClient = (client) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const response = await fetch(`${API_HOST}/client`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(client),\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(addClient(data));\r\n    dispatch(resetModalData());\r\n  } catch (err) {\r\n    dispatch(setError(err[0].msg));\r\n  }\r\n};\r\nexport const updateClient = (client) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const response = await fetch(`${API_HOST}/client/${client._id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(client),\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.error) throw data.error;\r\n\r\n    dispatch(editClient(data));\r\n    dispatch(resetModalData());\r\n  } catch (error) {\r\n    dispatch(setError(error[0].msg));\r\n  }\r\n};\r\n\r\nexport const setEditable = (value) => async (dispatch) => {\r\n  dispatch(setEditableClient(value));\r\n};\r\n\r\nexport const removeClient = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const res = await fetch(`${API_HOST}/client/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    const data = await res.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(deleteClient(id));\r\n  } catch (err) {\r\n    dispatch(setError(err[0].msg));\r\n  }\r\n};\r\n\r\n//Provider\r\nexport const setProviders = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const res = await fetch(`${API_HOST}/provider`);\r\n    const data = await res.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(getProviders(data.providers));\r\n  } catch (err) {\r\n    dispatch(setError(err[0] ? err[0].msg : err.message));\r\n  }\r\n};\r\nexport const createProvider = (provider) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const response = await fetch(`${API_HOST}/provider`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(provider),\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(addProvider(data));\r\n    // dispatch(addProv(data));\r\n    setProviders();\r\n    dispatch(resetProvider());\r\n  } catch (err) {\r\n    dispatch(setError(err[0].msg));\r\n  }\r\n};\r\n\r\nexport const updateProvider = async (provider, dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const response = await fetch(`${API_HOST}/provider/${provider._id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(provider),\r\n      headers: { \"Content-type\": \"application/json\" },\r\n    });\r\n    const data = await response.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(editProvider(data));\r\n    setProviders();\r\n    setClients();\r\n  } catch (error) {\r\n    dispatch(setError(error[0].msg));\r\n  }\r\n};\r\n\r\nexport const removeProvider = async (id, dispatch) => {\r\n  try {\r\n    dispatch(setLoading());\r\n    const res = await fetch(`${API_HOST}/provider/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    const data = await res.json();\r\n    if (data.error) throw data.error;\r\n    dispatch(deleteProvider(id));\r\n    dispatch(deleteProv(id));\r\n    setProviders();\r\n  } catch (err) {\r\n    dispatch(setError(err[0].msg));\r\n  }\r\n};\r\n\r\n//ClientModal\r\nexport const submitClientModalForm = async (state, onSubmit, dispatch) => {\r\n  try {\r\n    const body = { ...state };\r\n    delete body.provider;\r\n    delete body.editableProvider;\r\n    delete body.error;\r\n    onSubmit(body);\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n};\r\n\r\n//Search\r\nexport const sortOrFilrterTasks = async (dispatch, state) => {\r\n  try {\r\n    let body = { ...state };\r\n    delete body.click;\r\n    let query = Object.entries(body)\r\n      .reduce(\r\n        (q, elem) => q + (elem[1] ? elem[0] + \"=\" + elem[1] + \"&\" : \"\"),\r\n        \"?\"\r\n      )\r\n      .slice(0, -1);\r\n    if (query.length > 1) {\r\n      dispatch(setLoading());\r\n      const res = await fetch(`${API_HOST}/CLIENT${query}`);\r\n      const data = await res.json();\r\n      if (data.error) throw data.error;\r\n      dispatch(\r\n        setSuccess(\r\n          data.clients.length\r\n            ? \"Clients were sorted successfully!\"\r\n            : \"There are no founded clients!\"\r\n        )\r\n      );\r\n      dispatch(getClients(data.clients));\r\n      dispatch(resetSearchData());\r\n      dispatch(toggleClick(false));\r\n    }\r\n  } catch (err) {\r\n    dispatch(setError(err[0].msg));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <span class=\"spinner-inner-1\"></span>\r\n      <span class=\"spinner-inner-2\"></span>\r\n      <span class=\"spinner-inner-3\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { memo, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faEdit,\r\n  faCheck,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport \"./Provider.scss\";\r\n\r\nconst Provider = ({\r\n  provider,\r\n  providers,\r\n  toggleChecked,\r\n  updateProvider,\r\n  setEditableProvider,\r\n  changeProvider,\r\n  editableProvider,\r\n  removeProvider,\r\n}) => {\r\n  const currentlyEditing = editableProvider?._id === provider._id;\r\n\r\n  useEffect(() => {\r\n    currentlyEditing && inputRef.current.focus();\r\n  }, [setEditableProvider, currentlyEditing]);\r\n\r\n  let checked = false;\r\n  if (providers.length) {\r\n    providers.forEach((p) => {\r\n      if (p._id === provider._id) {\r\n        checked = true;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  return (\r\n    <Form.Group as={Row} className=\"d-flex justify-content-center my-0 \">\r\n      <Col\r\n        sm={5}\r\n        className=\"d-flex justify-content-start align-items-center p-0 mr-5\"\r\n      >\r\n        <Button\r\n          variant=\"light\"\r\n          className=\"p-0 border-secondary mr-1 my-1\"\r\n          onClick={() => toggleChecked(provider)}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faCheck}\r\n            style={checked ? { color: \"black\" } : { color: \"white\" }}\r\n          />\r\n        </Button>\r\n        {currentlyEditing ? (\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"inputValue\"\r\n            value={editableProvider.name}\r\n            ref={inputRef}\r\n            className=\"border-light bg-light my-1 mx-1\"\r\n            onChange={(e) => {\r\n              changeProvider(e.target.value);\r\n            }}\r\n          />\r\n        ) : (\r\n          <Form.Control\r\n            className=\"border-light bg-light mb-1\"\r\n            readOnly={true}\r\n            value={provider.name}\r\n          />\r\n        )}\r\n        {!currentlyEditing ? (\r\n          <>\r\n            <Button\r\n              variant=\"light\"\r\n              className=\"ml-auto mr-2 p-0\"\r\n              onClick={() => setEditableProvider(provider)}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"light\"\r\n              className=\"p-0\"\r\n              onClick={() => removeProvider(provider._id)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              variant=\"light\"\r\n              className=\"ml-auto mr-2 p-0\"\r\n              disabled={!editableProvider.name}\r\n              onClick={() => {\r\n                updateProvider(editableProvider);\r\n                setEditableProvider(null);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faCheck} />\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"light\"\r\n              className=\"p-0\"\r\n              onClick={() => {\r\n                setEditableProvider(null);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Col>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default memo(Provider);\r\n","import React, { useEffect, useRef, memo } from \"react\";\r\nimport Provider from \"../Provider/Provider\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  changeModalForm,\r\n  setModalInitialState,\r\n  resetModalData,\r\n  toggleCheckedProvider,\r\n  updateProvider,\r\n  setEditableProvider,\r\n  changeProvider,\r\n  removeProvider,\r\n  submitClientModalForm,\r\n  setError,\r\n} from \"../../redux/actions\";\r\nimport { Form, Modal, Button, Row, Col } from \"react-bootstrap\";\r\nimport \"./ClientModal.scss\";\r\n\r\nconst ClientModal = (props) => {\r\n  const inputRef = useRef(null);\r\n  const inputs = [\r\n    {\r\n      name: \"name\",\r\n      type: \"text\",\r\n      label: \"Name:\",\r\n      ref: inputRef,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      type: \"email\",\r\n      label: \"Email:\",\r\n    },\r\n    {\r\n      name: \"phone\",\r\n      type: \"number\",\r\n      label: \"Phone:\",\r\n    },\r\n    {\r\n      name: \"provider\",\r\n      type: \"text\",\r\n      label: \"Providers:\",\r\n    },\r\n  ];\r\n  const {\r\n    state,\r\n    onHide,\r\n    onSubmit,\r\n    editableClient,\r\n    providersList,\r\n    errorMessage,\r\n    //dispatch\r\n    changeModalForm,\r\n    setState,\r\n    resetModalData,\r\n    toggleChecked,\r\n    updateProvider,\r\n    setEditableProvider,\r\n    setIsOpenConfirmModal,\r\n    changeProvider,\r\n    createProvider,\r\n    removeProvider,\r\n    setError,\r\n    submitForm,\r\n  } = props;\r\n\r\n  const { name, email, phone, provider, providers, editableProvider, error } =\r\n    state;\r\n  useEffect(() => {\r\n    setError(error);\r\n  }, [setError, error]);\r\n  const inputsJSX = inputs.map((input, idx) => (\r\n    <Form.Group key={idx} as={Row} className=\"d-flex justify-content-between\">\r\n      <Form.Label column sm={2}>\r\n        {input.label}\r\n      </Form.Label>\r\n      <Col\r\n        sm={idx === inputs.length - 1 ? 6 : 10}\r\n        className=\"d-flex justify-content-between \"\r\n      >\r\n        <Form.Control\r\n          name={input.name}\r\n          type={input.type}\r\n          className=\"bg-light\"\r\n          onChange={({ target }) => changeModalForm(target)}\r\n          value={state[input.name]}\r\n          autoComplete={\"off\"}\r\n          ref={null ?? input.ref}\r\n        />\r\n      </Col>\r\n\r\n      <Col sm={4}>\r\n        {idx === inputs.length - 1 && (\r\n          <Button\r\n            variant=\"light\"\r\n            className=\"border-secondary rounded\"\r\n            disabled={!state[input.name]}\r\n            onClick={() => createProvider({ name: provider })}\r\n          >\r\n            Add Provider\r\n          </Button>\r\n        )}\r\n      </Col>\r\n    </Form.Group>\r\n  ));\r\n\r\n  const providersJSX = providersList.map((p) => (\r\n    <Provider\r\n      key={p._id}\r\n      toggleChecked={toggleChecked}\r\n      provider={p}\r\n      providers={providers}\r\n      updateProvider={updateProvider}\r\n      setEditableProvider={setEditableProvider}\r\n      changeProvider={changeProvider}\r\n      editableProvider={editableProvider}\r\n      removeProvider={removeProvider}\r\n    />\r\n  ));\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n    setState(editableClient);\r\n    return () => {\r\n      resetModalData();\r\n    };\r\n  }, [setState, editableClient, resetModalData]);\r\n\r\n  return (\r\n    <Modal show={true} onHide={onHide}>\r\n      <Modal.Header closeButton className=\"text-info\">\r\n        <Modal.Title>\r\n          {!editableClient ? \"New Client\" : \"Edit Client\"}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"text-danger mx-auto\">{errorMessage}</div>\r\n      <Modal.Body>\r\n        <Form onSubmit={(e) => e.preventDefault()} className=\"border-secondary\">\r\n          {inputsJSX}\r\n\r\n          <Col style={{ border: \"1px solid #dee2e6\" }}>{providersJSX}</Col>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {editableClient && (\r\n          <Button\r\n            variant=\"danger\"\r\n            className=\"mr-auto\"\r\n            onClick={() => {\r\n              setIsOpenConfirmModal(true);\r\n            }}\r\n          >\r\n            Delete Client\r\n          </Button>\r\n        )}\r\n        <Button\r\n          variant=\"light\"\r\n          onClick={onHide}\r\n          className=\"border-secondary rounded rounded\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"light\"\r\n          className=\"border-secondary rounded\"\r\n          disabled={errorMessage || !(name.trim() && email.trim() && phone)}\r\n          onClick={() => {\r\n            submitForm(state, onSubmit);\r\n            onHide();\r\n          }}\r\n        >\r\n          {!editableClient ? \"Add Client\" : \"Save Client\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.clientModalReducer,\r\n    providersList: state.clientReducer.providersList,\r\n    errorMessage: state.clientReducer.errorMessage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeModalForm: (data) => dispatch(changeModalForm(data)),\r\n    setState: (data) => dispatch(setModalInitialState(data)),\r\n    resetModalData: () => dispatch(resetModalData()),\r\n    toggleChecked: (provider) => dispatch(toggleCheckedProvider(provider)),\r\n    updateProvider: (prov) =>\r\n      dispatch((dispatch) => updateProvider(prov, dispatch)),\r\n    setEditableProvider: (prov) => dispatch(setEditableProvider(prov)),\r\n    changeProvider: (value) => dispatch(changeProvider(value)),\r\n    removeProvider: (id) =>\r\n      dispatch((dispatch) => removeProvider(id, dispatch)),\r\n    setError: (message) => dispatch(setError(message)),\r\n    submitForm: (data, onSubmit) =>\r\n      dispatch((dispatch) => submitClientModalForm(data, onSubmit, dispatch)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(ClientModal));\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Client = ({ client, setEditable }) => {\r\n  return (\r\n    <tr>\r\n      <td>{client.name}</td>\r\n      <td>{client.email}</td>\r\n      <td>{client.phone}</td>\r\n      <td>\r\n        {!!client.providers.length &&\r\n          client.providers.map((el) => el.name).join(\", \")}\r\n      </td>\r\n      <td>\r\n        <Button\r\n          variant=\"light\"\r\n          className=\"text-info\"\r\n          onClick={() => setEditable(client)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Client;\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst Confirm = (props) => {\r\n  const { onHide, removeClient, client } = props;\r\n  return (\r\n    <Modal show={true} onHide={onHide}>\r\n      <Modal.Header closeButton className=\"bg-info text-light\"></Modal.Header>\r\n      <Modal.Body>\r\n        Are you sure you want to delete\r\n        <span className=\"text-info\"> {client}</span> ?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={removeClient}>\r\n          Yes\r\n        </Button>\r\n        <Button variant=\"outline-info\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\nConfirm.propTypes = {\r\n  onHide: PropTypes.func.isRequired,\r\n  removeClient: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default memo(Confirm);\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  changeSearchValue,\r\n  setDropdownValue,\r\n  setDatepickerDate,\r\n  sortOrFilrterTasks,\r\n  toggleClick,\r\n  resetSearchData,\r\n} from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button, DropdownButton, Row } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Search.scss\";\r\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\r\n\r\nconst sortVariants = [\r\n  {\r\n    label: \"A-Z\",\r\n    value: \"a-z\",\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: \"z-a\",\r\n  },\r\n  {\r\n    label: \"Created_Date_Oldest\",\r\n    value: \"creation_date_oldest\",\r\n  },\r\n  {\r\n    label: \"Created_Date_Newest\",\r\n    value: \"creation_date_newest\",\r\n  },\r\n  {\r\n    label: \"Reset\",\r\n    value: \"\",\r\n  },\r\n];\r\n\r\nconst Search = (props) => {\r\n  const { search, sort, create_lte, create_gte, click } = props.state;\r\n  const {\r\n    changeSearchValue,\r\n    setDropdownValue,\r\n    setDatepicker,\r\n    sortOrFilrterTasks,\r\n    toggleClick,\r\n    state,\r\n    resetSearchData,\r\n  } = props;\r\n\r\n  const datePickers = [\r\n    {\r\n      label: \"Created Later\",\r\n      value: create_lte,\r\n      name: \"create_lte\",\r\n    },\r\n    {\r\n      label: \"Created Greater\",\r\n      value: create_gte,\r\n      name: \"create_gte\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    return () => {\r\n      resetSearchData();\r\n    };\r\n  }, [resetSearchData]);\r\n\r\n  const sortItems = sortVariants.map((item, idx) => (\r\n    <DropdownItem\r\n      key={idx}\r\n      onClick={() => setDropdownValue(\"sort\", item.value)}\r\n    >\r\n      {item.label}\r\n    </DropdownItem>\r\n  ));\r\n\r\n  const datePickersJSX = datePickers.map((item, idx) => (\r\n    <Form.Group key={idx} className=\"mx-1 text-info\">\r\n      {item.label}\r\n      <DatePicker\r\n        selected={item.value}\r\n        onChange={(date) => setDatepicker(item.name, date)}\r\n        isClearable\r\n        showMonthDropdown\r\n        scrollableYearDropdown\r\n      />\r\n    </Form.Group>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <Row className=\"d-flex justify-content-center mb-0 align-items-start\">\r\n          <Form.Group className=\"search_box mr-5\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Type to search\"\r\n              onChange={(e) => changeSearchValue(e.target)}\r\n              value={search}\r\n              name=\"search\"\r\n              className=\"search_input\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button type=\"button\" className=\"search_btn\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </Button>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"ml-5\">\r\n            <DropdownButton\r\n              title={\r\n                sort\r\n                  ? sortVariants.find((el) => sort === el.value).label\r\n                  : \"Sort\"\r\n              }\r\n              variant=\"outline-secondary text-info\"\r\n            >\r\n              {sortItems}\r\n            </DropdownButton>\r\n          </Form.Group>\r\n\r\n          {!click ? (\r\n            <Button\r\n              variant=\"outline-secondary text-info  mx-2\"\r\n              onClick={() => toggleClick(true)}\r\n            >\r\n              Dates\r\n            </Button>\r\n          ) : (\r\n            <div className=\"justify-content-center align-items-start \">\r\n              <Button\r\n                type=\"button\"\r\n                className=\"search_btn \"\r\n                onClick={() => toggleClick(false)}\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Button>\r\n              {datePickersJSX}\r\n            </div>\r\n          )}\r\n\r\n          <Button\r\n            variant=\"info\"\r\n            type=\"submit\"\r\n            onClick={() => sortOrFilrterTasks(state)}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.searchReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeSearchValue: (target) => dispatch(changeSearchValue(target)),\r\n    toggleClick: (val) => dispatch(toggleClick(val)),\r\n    setDropdownValue: (name, value) => dispatch(setDropdownValue(name, value)),\r\n    setDatepicker: (name, value) => dispatch(setDatepickerDate(name, value)),\r\n    sortOrFilrterTasks: (state) =>\r\n      dispatch((dispatch) => sortOrFilrterTasks(dispatch, state)),\r\n    resetSearchData: () => dispatch(resetSearchData()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { useEffect, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setClients,\r\n  createClient,\r\n  updateClient,\r\n  setIsOpenModal,\r\n  setEditable,\r\n  setProviders,\r\n  createProvider,\r\n  setIsOpenConfirmModal,\r\n  removeClient,\r\n} from \"../../redux/actions\";\r\nimport { Table, Container, Row, Button, Col } from \"react-bootstrap\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ClientModal from \"../ClientModal/ClientModal\";\r\nimport Client from \"../Client/Client\";\r\nimport Confirm from \"../ConfirmModal/ConfirmModal\";\r\nimport \"./clientList.scss\";\r\n\r\nimport Search from \"../Search/Search\";\r\n\r\nconst ClientList = (props) => {\r\n  const {\r\n    state,\r\n    setClients,\r\n    createClient,\r\n    updateClient,\r\n    setEditable,\r\n    setProviders,\r\n    createProvider,\r\n    setIsOpenModal,\r\n    removeClient,\r\n    setIsOpenConfirmModal,\r\n  } = props;\r\n  const { clients, editableClient, loading, isOpenModal, isOpenConfirmModal } =\r\n    state;\r\n\r\n  useEffect(() => {\r\n    setClients();\r\n    setProviders();\r\n  }, [setClients, setProviders]);\r\n  const clientList = clients.map((client) => (\r\n    <Client key={client._id} client={client} setEditable={setEditable} />\r\n  ));\r\n\r\n  return (\r\n    <Container className=\"d-flex-column justify-content-center align-items-center mt-5\">\r\n      <Row className=\"d-flex my-3 align-items-center\">\r\n        <Search />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h5 className=\"text-info font-weight-bold\">Clients</h5>\r\n        </Col>\r\n        <Col className=\"d-flex justify-content-end mb-2\">\r\n          <Button\r\n            variant=\"light\"\r\n            className=\"rounded border-secondary\"\r\n            onClick={() => setIsOpenModal(true)}\r\n          >\r\n            New client\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {!!clients.length && (\r\n          <Table striped bordered hover size=\"sm\" className=\"clientsTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Providers</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{clientList}</tbody>\r\n          </Table>\r\n        )}\r\n      </Row>\r\n      {isOpenModal && (\r\n        <ClientModal\r\n          onHide={() => {\r\n            setEditable(null);\r\n            setIsOpenModal(false);\r\n          }}\r\n          setIsOpenConfirmModal={setIsOpenConfirmModal}\r\n          onSubmit={editableClient ? updateClient : createClient}\r\n          editableClient={editableClient}\r\n          createProvider={createProvider}\r\n        />\r\n      )}\r\n      {isOpenConfirmModal && (\r\n        <Confirm\r\n          onHide={() => setIsOpenConfirmModal(false)}\r\n          removeClient={() => removeClient(editableClient._id)}\r\n          client={editableClient.name}\r\n        />\r\n      )}\r\n\r\n      {loading && <Spinner />}\r\n    </Container>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state.clientReducer,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  setClients,\r\n  createClient,\r\n  updateClient,\r\n  setIsOpenModal,\r\n  setEditable,\r\n  setProviders,\r\n  removeClient,\r\n  setIsOpenConfirmModal,\r\n  createProvider,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(ClientList));\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport ClientList from \"./components/ClientList/ClientList\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst App = (props) => {\n  const { errorMessage, successMessage } = props;\n  useEffect(() => {\n    errorMessage &&\n      toast.error(`🦄 ${errorMessage}`, {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }, [errorMessage]);\n\n  useEffect(() => {\n    successMessage &&\n      toast.success(`🦄 ${successMessage}`, {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n  }, [successMessage]);\n  return (\n    <>\n      <ClientList />\n      <ToastContainer />\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  errorMessage: state.clientReducer.errorMessage,\n  successMessage: state.clientReducer.successMessage,\n});\nexport default connect(mapStateToProps, null)(App);\n","import * as types from \"../../redux/types\";\r\n\r\nconst initialState = {\r\n  clients: [],\r\n  providersList: [],\r\n  isOpenModal: false,\r\n  isOpenConfirmModal: false,\r\n  editableClient: null,\r\n  successMessage: null,\r\n  errorMessage: null,\r\n  loading: false,\r\n};\r\n\r\nconst clientReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_CLIENTS: {\r\n      return {\r\n        ...state,\r\n        clients: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case types.SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload,\r\n        successMessage: null,\r\n        loading: false,\r\n      };\r\n    }\r\n    case types.SET_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        successMessage: action.payload,\r\n        errorMessage: null,\r\n        loading: false,\r\n      };\r\n    }\r\n    case types.REMOVE_CLIENT: {\r\n      let clients = [...state.clients];\r\n      clients = clients.filter((t) => t._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        clients,\r\n        successMessage: \"Client was removed successfully!\",\r\n        errorMessage: null,\r\n        loading: false,\r\n        isOpenModal: false,\r\n        isOpenConfirmModal: false,\r\n        editableClient: null,\r\n      };\r\n    }\r\n    case types.SET_ISOPENMODAL: {\r\n      return {\r\n        ...state,\r\n        isOpenModal: action.payload,\r\n      };\r\n    }\r\n\r\n    case types.ADD_CLIENT: {\r\n      const clients = [...state.clients, action.payload];\r\n      return {\r\n        ...state,\r\n        clients,\r\n        isOpenModal: false,\r\n        loading: false,\r\n        successMessage: \"Client was added successfully!\",\r\n        errorMessage: null,\r\n      };\r\n    }\r\n\r\n    case types.EDIT_CLIENT: {\r\n      const clients = [...state.clients];\r\n\r\n      clients[clients.findIndex((c) => c._id === action.payload._id)] = {\r\n        ...action.payload,\r\n      };\r\n      return {\r\n        ...state,\r\n        clients,\r\n        isOpenModal: false,\r\n        editableClient: null,\r\n        errorMessage: null,\r\n        loading: false,\r\n        successMessage: \"Client was updated successfully!\",\r\n      };\r\n    }\r\n    case types.SET_ISOPENCONFIRMMODAL: {\r\n      return {\r\n        ...state,\r\n        isOpenConfirmModal: action.payload,\r\n      };\r\n    }\r\n\r\n    case types.SET_EDITABLE_CLIENT: {\r\n      return {\r\n        ...state,\r\n        editableClient: action.payload,\r\n        isOpenModal: true,\r\n      };\r\n    }\r\n    case types.SET_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null,\r\n        successMessage: null,\r\n      };\r\n    }\r\n\r\n    case types.GET_PROVIDERS: {\r\n      return {\r\n        ...state,\r\n        providersList: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n\r\n    case types.EDIT_PROVIDER: {\r\n      const providersList = [...state.providersList];\r\n      const { _id } = action.payload;\r\n\r\n      providersList[providersList.findIndex((p) => p._id === _id)] =\r\n        action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        providersList,\r\n        loading: false,\r\n        errorMessage: null,\r\n        successMessage: \"Provider was updated successfully!\",\r\n      };\r\n    }\r\n\r\n    case types.ADD_PROVIDER: {\r\n      let providersList = [...state.providersList];\r\n\r\n      providersList = [...state.providersList, { ...action.payload }];\r\n\r\n      return {\r\n        ...state,\r\n        providersList,\r\n        errorMessage: null,\r\n        successMessage: \"Provider was created successfully!\",\r\n        loading: false,\r\n      };\r\n    }\r\n    case types.REMOVE_PROVIDER: {\r\n      let providersList = [...state.providersList];\r\n      providersList = providersList.filter((p) => p._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        providersList,\r\n        errorMessage: null,\r\n        successMessage: \"Provider was removed successfully!\",\r\n        loading: false,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clientReduser;\r\n","import {\r\n  CHANGE_MODAL_FORM,\r\n  RESET_MODAL_DATA,\r\n  SET_INITIALSTATE,\r\n  TOGGLE_CHECKED,\r\n  SET_EDITABLE_PROVIDER,\r\n  CHANGE_PROVIDER,\r\n  CREATE_PROVIDER,\r\n  RESET_PROVIDER,\r\n  DELETE_PROVIDER,\r\n} from \"../types\";\r\nimport {\r\n  maxLength,\r\n  minLength,\r\n  validateEmail,\r\n  isRequired,\r\n  isArmPhoneNumber,\r\n} from \"../../utils/helpers/validators\";\r\n\r\nconst maxLength50 = maxLength(50);\r\nconst minLength1 = minLength(1);\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  provider: \"\",\r\n  providers: [],\r\n  editableProvider: null,\r\n  error: null,\r\n};\r\n\r\nconst clientModalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALSTATE: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    case CHANGE_MODAL_FORM: {\r\n      const { name, value } = action.payload;\r\n\r\n      let error =\r\n        (name !== \"provider\" && minLength1(value.trim())) ||\r\n        (name !== \"provider\" && isRequired(value.trim(), name)) ||\r\n        ((name === \"name\" || name === \"email\") && maxLength50(value.trim())) ||\r\n        (name === \"email\" && validateEmail(value.trim())) ||\r\n        (name === \"phone\" && isArmPhoneNumber(value.trim()));\r\n\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n        error,\r\n      };\r\n    }\r\n\r\n    case TOGGLE_CHECKED: {\r\n      let providersIds = [...state.providers].map((p) => p._id);\r\n      let providers = [...state.providers];\r\n      if (providersIds.includes(action.payload._id)) {\r\n        providers = providers.filter((p) => p._id !== action.payload._id);\r\n      } else {\r\n        providers.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        providers,\r\n      };\r\n    }\r\n\r\n    case DELETE_PROVIDER: {\r\n      let providers = [...state.providers];\r\n      providers = providers.filter((p) => p._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        providers,\r\n      };\r\n    }\r\n\r\n    case SET_EDITABLE_PROVIDER: {\r\n      return {\r\n        ...state,\r\n        editableProvider: action.payload,\r\n      };\r\n    }\r\n    case CHANGE_PROVIDER: {\r\n      let value = action.payload;\r\n      const editableProvider = { ...state.editableProvider };\r\n      editableProvider.name = value;\r\n      let error = value\r\n        ? minLength1(value.trim()) || maxLength50(value.trim())\r\n        : null;\r\n      return {\r\n        ...state,\r\n        editableProvider,\r\n        error,\r\n      };\r\n    }\r\n    case RESET_MODAL_DATA: {\r\n      return initialState;\r\n    }\r\n    case RESET_PROVIDER: {\r\n      return {\r\n        ...state,\r\n        provider: \"\",\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clientModalReducer;\r\n","import {\r\n  CHANGE_SEARCH_VALUE,\r\n  SET_DROPDOWN_VALUE,\r\n  SET_DATEPICKER_DATE,\r\n  RESET_SEARCH_DATA,\r\n  TOGGLE_CLICK,\r\n} from \"../../redux/types\";\r\n\r\nconst initialState = {\r\n  search: \"\",\r\n  create_lte: null,\r\n  create_gte: null,\r\n  sort: null,\r\n  click: false,\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_VALUE: {\r\n      const { name, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    }\r\n    case TOGGLE_CLICK: {\r\n      return {\r\n        ...state,\r\n        click: action.payload,\r\n      };\r\n    }\r\n    case SET_DROPDOWN_VALUE: {\r\n      const [name, value] = action.payload;\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    }\r\n    case SET_DATEPICKER_DATE: {\r\n      const [name, value] = action.payload;\r\n      return {\r\n        ...state,\r\n        [name]: value,\r\n      };\r\n    }\r\n    case RESET_SEARCH_DATA: {\r\n      return initialState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport clientReducer from \"./reducers/clientReducer\";\r\nimport clientModalReducer from \"./reducers/clientModalReducer\";\r\nimport searchReducer from \"./reducers/searchReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middlewares = [thunk];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\nconst store = createStore(\r\n  combineReducers({\r\n    clientReducer,\r\n    clientModalReducer,\r\n    searchReducer,\r\n  }),\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}